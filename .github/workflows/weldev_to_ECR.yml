name: Deploy weldev to AWS ECR

env:
  branch: ${{ github.ref_name }}
  awsuid: ${{ secrets.AWS_UID }}

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Check aws deploy target branch
        run: |
          if [[ "$branch" == "welbing" ]]; then
            exit 0
          fi
          if [[ "$branch" == "weldev" ]]; then
            exit 0
          fi
          exit 1

      - name: check branch name
        run: echo "${{ github.ref_name }}"
        env:
          branch: ${{ github.ref_name }}

      # リポジトリのコードをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}  # weldev内のブランチをビルド

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AKEY }}
          aws-secret-access-key: ${{ secrets.ASECRET }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr        
        uses: aws-actions/amazon-ecr-login@v2

      # Docker イメージをビルド
      - name: Build Docker image
        run: |
          docker build -t $branch . # rootディレクトリの Dockerfile を使用

      # Docker イメージに latestタグを付ける
      - name: Tag Docker image
        run: |
          target="${awsuid}.dkr.ecr.ap-northeast-1.amazonaws.com/${branch}:latest"
          docker tag "${branch}:latest" $target

      # push to Amazon ECR 
      - name: Push Docker image to Amazon ECR
        run: |
          echo $branch
	  aws ecr get-login-password | docker login --username AWS --password-stdin https://${awsuid}.dkr.ecr.<region>.amazonaws.com
Login Succeeded
          target="${awsuid}.dkr.ecr.ap-northeast-1.amazonaws.com/${branch}:latest"
          echo $target
          docker push $target

      # test : ec2 deploy
      - name: ec2 deploy
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          cid=$( docker ps | grep ${branch} | cut -d ' ' -f 1 )
          if [ "$cid" != "" ]; then
            docker stop $cid > /dev/null
          fi
          ssh -oStrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} -i private_key "docker pull ${awsuid}.dkr.ecr.ap-northeast-1.amazonaws.com/${branch} && docker run -d -p 8443:8443 --env-file env --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} AWS_ACCESS_KEY_ID= ${awsuid}.dkr.ecr.ap-northeast-1.amazonaws.com/${branch}"

